import asyncio
import logging
from idlelib.undo import Command
from aiogram.filters import Command
from turtledemo.penrose import start
import pandas as pd
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, FSInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typer.cli import callback
from aiogram import F
from aiogram.enums import ParseMode

TOKEN = ""


logging.basicConfig(level=logging.INFO)
bot = Bot(token=TOKEN)
dp = Dispatcher()

#start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    kb = [
       [types.KeyboardButton(text="/menu")]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb)
    await message.answer("Вот краткая инструкция: <b>/menu</b> - выбор сервиса," ,
                         parse_mode=ParseMode.HTML
    )


#help
@dp.message(Command("help"))
async def cmd_help(message:types.Message):
    await message.answer("Бот создан как учебный проект! Основной функционал заключается в выводе файла с вакансиями с разных сервисов поиска работы.")


#menu
@dp.message(Command("menu"))
async def cmd_menu(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="хочу work.ua",
        callback_data ="file_value")
    )
    await message.answer(
        "Какой сервис нужен?",
        reply_markup=builder.as_markup()
    )
@dp.callback_query(F.data == "file_value")
async def send_fiel(callback: types.CallbackQuery):
    fiel = FSInputFile('data.csv')
    await callback.message.answer_document(fiel, caption="work.ua")


@dp.message(F.text.lower() == "привет")
async def Hi_message(message: types.Message):
    await message.answer(f"Привет, <b>{message.from_user.full_name}</b>",
    parse_mode=ParseMode.HTML)


#main
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
